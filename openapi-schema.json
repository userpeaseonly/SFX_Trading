openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /en/users/user_exists_info/:
    get:
      operationId: listUserExists
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - en
  /en/users/user_info/:
    get:
      operationId: retrieveUserInfo
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: ''
      tags:
      - en
  /en/tasks/topics/:
    get:
      operationId: listTopics
      description: API view to retrieve all topics.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
          description: ''
      tags:
      - en
  /en/tasks/topics/{id}/:
    get:
      operationId: retrieveTopic
      description: API view to retrieve a specific topic by its id.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Topic.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
      tags:
      - en
  /en/tasks/topics/{id}/tasks/:
    get:
      operationId: listTasks
      description: API view to retrieve all tasks for a given topic.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - en
  /en/tasks/student-tasks/:
    get:
      operationId: listStudentTasks
      description: API view to retrieve all student tasks for the authenticated user.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentTask'
          description: ''
      tags:
      - en
  /en/tasks/student-tasks/{task_id}/:
    get:
      operationId: retrieveStudentTask
      description: API view to retrieve a specific student task by task_id for the
        authenticated user.
      parameters:
      - name: task_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentTask'
          description: ''
      tags:
      - en
  /en/otp/sign_up/:
    post:
      operationId: createSignUp
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - en
  /en/otp/login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - en
  /en/otp/verify/:
    post:
      operationId: createVerifyOTP
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - en
  /en/otp/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - en
components:
  schemas:
    UserInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        phone_number:
          type: string
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        telegram_id:
          type: string
          maxLength: 50
        profile_image:
          type: string
          format: binary
          nullable: true
        coins:
          type: integer
          readOnly: true
      required:
      - phone_number
      - telegram_id
    Topic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - name
      - description
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        topic:
          type: integer
      required:
      - title
      - description
      - topic
    StudentTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - Pending
          - Rejected
          - Approved
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        student:
          type: integer
        task:
          type: integer
      required:
      - student
      - task
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
